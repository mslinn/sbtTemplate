#!/usr/bin/env bash

# Sample usage:
# bin/run -j [entryPoint]
#
# -j option forces rebuild of jar
# entryPoint defaults to "Hello"

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )/.."
cd "$DIR"

function trim {
  sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//'
}

# Scan build.sbt for program entity, Scala version and program version
function findValue {
  echo "$( grep "$1 :=" build.sbt | cut -d' ' -f 3 | tr -d \" | trim )"
}

SCALA_VERSION() {
  V=`grep -E "^scalaVersion[[:space:]]+:=" build.sbt |  cut -d' ' -f 3 | tr -d \"`
   case ${V} in
    2.10.*) echo 2.10 ;;
    2.11.*) echo 2.11 ;;
    2.12.*) echo 2.12 ;;
    2.13.*) echo 2.13 ;;
       0.*)  echo 3.0 ;;
         *) echo UNKNOWN ;;
  esac
}

NAME="$( findValue name )"
VERSION="$( findValue version )"
JAR=target/scala-`SCALA_VERSION`/${NAME}-assembly-${VERSION}.jar

if [[ "$1" == -j ]] || [[ ! -f ${JAR} ]]; then
  echo "Building $JAR"
  sbt assembly

  if [[ "$1" == -j ]]; then shift; fi
fi

if [[ "$1" ]]; then
  ENTRY="$1"
else
  ENTRY=Hello
fi

java -cp "$JAR" "$ENTRY" "$@"
